version: 2

aliases:
  # -------------------------
  #      ALIASES: Caches
  # -------------------------
  - &restore-deps-cache
    key: deps-cache-{{ arch }}-{{ checksum "Cargo.toml" }}

  - &save-deps-cache
    key: deps-cache-{{ arch }}-{{ checksum "Cargo.toml" }}
    paths:
      - /usr/local/cargo/registry
      - ~/project/target/

  # -------------------------
  #  ALIASES: Branch Filters
  # -------------------------
  - &filter-only-master
    branches:
      only: master
  - &filter-only-semantic-pr
    branches:
      only:  /^(pull|fix|feat)\/.*$/

defaults: &defaults
  working_directory: ~/project
  environment:
    RUST_BACKTRACE: 1

jobs:
  build:
    <<: *defaults
    docker:
      - image: rust:latest
    steps:
      - checkout
      - restore_cache: *restore-deps-cache
      - run: cargo build
      - save_cache: *save-deps-cache

  test:
    <<: *defaults
    docker:
      - image: rust:latest
    steps:
      - checkout
      - restore_cache: *restore-deps-cache
      - run: apt update && apt install build-essential
      - run: rustup component add clippy
      - run: rustup component add rustfmt
      - run: cargo test --all
      - run: cargo clippy
      - run: cargo fmt -- --check
      - save_cache: *save-deps-cache

  install:
    <<: *defaults
    docker:
      - image: rust:latest
    steps:
      - checkout
      - restore_cache: *restore-deps-cache
      - run: apt update && apt install build-essential
      - run: cargo install --force --debug
      - persist_to_workspace:
          root: /usr/local/cargo/bin/
          paths:
            - semantic-rs
      - save_cache: *save-deps-cache

  release-dry-run:
    <<: *defaults
    docker:
      - image: rust:latest
    steps:
      - checkout
      - attach_workspace:
          at: /workspace
      - run: /workspace/semantic-rs -w=false

  release:
    <<: *defaults
    docker:
      - image: rust:latest
    steps:
      - checkout
      - attach_workspace:
          at: /workspace
      - run: /workspace/semantic-rs -w=true

workflows:
  version: 2
  analysis:
    jobs:
      - build:
          filters: *filter-only-semantic-pr
      - test:
          filters: *filter-only-semantic-pr

  release:
    jobs:
      - build:
          filters: *filter-only-master
      - test:
          filters: *filter-only-master
      - install:
          filters: *filter-only-master
      - release-dry-run:
          filters: *filter-only-master
          requires:
            - build
            - test
            - install
      - hold:
          filters: *filter-only-master
          type: approval
          requires:
            - release-dry-run
      - release:
          filters: *filter-only-master
          requires:
            - hold
